encoding system utf-8
# source c:/tcl/bin/tkcon.tcl
# tkcon show

set ::ASPECTPATH [pwd]/
source ${::ASPECTPATH}necessary/fileProcess.tcl

## ====================================================
set ::resultDir "./report"
if { ![file exist $::resultDir] } { file mkdir $::resultDir }

set BUILD_DATE_TIME [clock format [clock seconds] -format "%y%m%d_%H%M%S"]

set reportFile "$::resultDir/EAP111_Report_line2\_$BUILD_DATE_TIME.csv"

if { ! [file exists $reportFile] } {
	# _f_WriteFile $reportFile w "Frequency,Data Rate,Bandwidth,Antenna,Tx Power,None A,Error Message 1,Error Message 2,Error Message 3,Power (dBm),EVM (dB),Freq Error (ppm),Sym Clk Error (ppm),LO Leakage (dBc),Spectrum Mask (%)\n"
	_f_WriteFile $reportFile w "Frequency,Data Rate,Bandwidth,Antenna,Tx Power,None A,Power (dBm),EVM (dB),Freq Error (ppm),Sym Clk Error (ppm),LO Leakage (dBc),Spectrum Mask (%)\n"

}

set infile [_f_ReadFile ${::ASPECTPATH}sourceFile/log_line2.csv]

## PART A, Get RF Item.
## ====================================================
set line_start {WIFI }
set line_end {,WIFI}

## ,2442 MHz DSSS-1 BW-20 ANT_1 23 dBm NON_HT NA 
set p01 {,-{0,1}\d+ MHz [A-Z][A-Z][A-Z][A-Z]-\d+ [A-Z][A-Z]-\d+ [A-Z][A-Z][A-Z]_\d+ {0,1}\d+ dBm [A-Z][A-Z][A-Z]_[A-Z][A-Z]+ NA }

set item_list [string map { \} ""} [string map { \{: ""} [string map {, " "} [string map { " " :} [string map {WIFI ""} [regexp -all -inline -- $line_start[string repeat $p01 63]$line_end $infile]]]]]]

if {[info exists tmp_item]} {
	unset tmp_item
}

## 捨去重覆 Item
foreach item $item_list {
	if {[regexp $item $item_list]} {
		append tmp_item "$item "
		set item_list [string map "$item \"\"" $item_list]
	}
}

if {[info exists csvItem]} {
	unset csvItem
}

foreach line $tmp_item {
	set tmp_line [string map {: " "} $line]
	puts "tmp_line: $tmp_line"

	set data_freq 	[lindex $tmp_line 0]
	set data_rate 	[lindex $tmp_line 2]
	set data_bw 	[lindex $tmp_line 3]
	set data_ant 	[lindex $tmp_line 4]
	set data_tx 	[lindex $tmp_line 5]
	set data_non 	[lindex $tmp_line 7]

	append csvItem "$data_freq,$data_rate,$data_bw,$data_ant,$data_tx,$data_non,\n"
}


## PART B, Get Power dBm.
## ====================================================
set line_start {,4T4R}
set line_end {,OK}

## ,Capture failed! --> 需乘以三組
set v01 [string repeat {,[A-Za-z]* [a-z]*!+} 3]

## ,23.4199,-18.4212,7.72009,7.77935,-58.0936,0 --> 需乘以三組
set v02 [string repeat {,{0,1}\d+\.\d+,-{0,1}\d+\.\d+,{0,1}\d+\.\d+,{0,1}\d+\.\d+,-{0,1}\d+\.\d+,\d+} 3]

# regexp -all -inline $line_start$v01$v02$v01$v02$v01$v02$line_end $infile

set value_list [string map {, " "} [string map { \} ""} [string map { \{ ""} [string map {,OK ""} [string map {,4T4R, ""} [string map {" " :} [regexp -all -inline $line_start$v01$v02$v01$v02$v01$v02$line_end $infile]]]]]]]

if {[info exists csvValue]} {
	unset csvValue
}

## 取 3 取 6
## Item 對應 --> 正確 Value
## 2412:MHz:DSSS-1:BW-20:ANT_1:23:dBm:NON_HT:NA: --> Capture:failed! Capture:failed! Capture:failed!
## 2412:MHz:DSSS-1:BW-20:ANT_2:23:dBm:NON_HT:NA: --> 23.4199 -18.4212 7.72009 7.77935 -58.0936 0
## 2412:MHz:DSSS-1:BW-20:ANT_3:23:dBm:NON_HT:NA: --> 24.4397 -19.1818 7.70967 7.86928 -60.4537 0
## 2412:MHz:DSSS-1:BW-20:ANT_4:23:dBm:NON_HT:NA: --> 23.3936 -18.0513 7.72115 8.10128 -78.9322 0

set i 1 ; set i1 3 ; set i2 9 ; set i3 15 ; set i4 21

foreach value $value_list {
	if {$i == $i1} {
		append csvValue "$value "
		set i1 [expr $i1 +21]

	} elseif {$i == $i2} {
		append csvValue "$value "
		set i2 [expr $i2 +21]

	} elseif {$i == $i3} {
		append csvValue "$value "
		set i3 [expr $i3 +21]

	} elseif {$i == $i4} {
		append csvValue "$value "
		set i4 [expr $i4 +21]

	} else {
		append csvValue $value\,
	}


	incr i
}

if {[info exists csvData]} {
	unset csvData
}

## Make CSV
## ================================================
foreach item $csvItem value $csvValue {
	if {$item == ""} {break}
	append csvData $item$value\n
}


_f_WriteFile $reportFile a $csvData
