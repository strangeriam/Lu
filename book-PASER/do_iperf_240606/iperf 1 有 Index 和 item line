set ::dirRaw "C:/testlog/WDO_PARSER_RAW/02_REPORT_MAY/01_RAW"
set ::dirReport "C:/testlog/WDO_PARSER_RAW/02_REPORT_MAY/02_REPORT"

proc _f_Main_Report {} {
		_f_vini_profilewr STATUS LOCATION TEST

		set ::G_GUI_listmode_testitems ""
		lappend ::G_GUI_listmode_testitems "Report MAY . Current"
		lappend ::G_GUI_listmode_testitems "Report MAY . IPerf"
		lappend ::G_GUI_listmode_testitems "Report MAY . Memory"
		lappend ::G_GUI_listmode_testitems "Report MAY . System"
		_f_update_listmode_testitem

		for {set i 12} {$i <= 14} {incr i} {
				_f_modify_listmode_testitem $i "" gray
		}

		set ::Fail_Test_Process2 {_f_termmsg_V2 "Footer Information" "Finish Date and Time : [clock format [clock seconds] -format "%Y/%m/%d %H:%M:%S"]\nTest Status: FAIL" * -nodisplaytime}
		set ::fch($::COS1.RX.REG.FILTER) {
				catch {
					set rtdata [regsub -all -- {\n\r|\r\n|\r|\n} "$rtdata" "\n[_f_TIME24ms]| "]
				}
		}

		set ::G_AnsiFilter 0

		while 1 {
			_f_clear

			;# ##############################################################################
			_f_ScanDutInfo
			_f_StartCountTestTime
			_f_termmsg_V2 "Header Information" "Product: [_f_vini_profilerd SFIS MODELNAME]\nWork Order: [_f_vini_profilerd SFIS lot_no]\nSTATION ID: [_f_vini_profilerd SFIS ws_id]\nSN: [_f_vini_profilerd SFIS SN]\nMAC: [_f_vini_profilerd SFIS MAC]\nTest Program Version: [_f_vini_profilerd SFIS program_ver]\nTest Date and Start Time: [clock format [clock seconds] -format "%Y/%m/%d %H:%M:%S"]" * -nodisplaytime
			if { ! [_f_shopfloor] } { _f_capture off ; continue }
			;# ##############################################################################

			if {[_f_vini_profilerd SFIS ws_id] == "REPORT_MAY"} {
				if { ! [_f_TestFunc _f_report_2_current "Report MAY . Current" 	-TestItem "Report MAY . Current"] } { continue }
				if { ! [_f_TestFunc _f_report_4_iperf 	"Report MAY . IPerf" 	-TestItem "Report MAY . IPerf"] } { continue }
				# if { ! [_f_TestFunc _f_report_5_mem 	"Report MAY . Memory" 	-TestItem "Report MAY . Memory"] } { continue }
				# if { ! [_f_TestFunc _f_report_3_sys 	"Report MAY . System" 	-TestItem "Report MAY . System"] } { continue }
			} else {
				# if { ! [_f_TestFunc _f_report_2_current_loop "Report MAY . Current" 	-TestItem "Report MAY . Current"] } { continue }
				if { ! [_f_TestFunc _f_report_4_iperf_loop 	"Report MAY . IPerf" 	-TestItem "Report MAY . IPerf"] } { continue }
				# if { ! [_f_TestFunc _f_report_5_mem_loop 	"Report MAY . Memory" 	-TestItem "Report MAY . Memory"] } { continue }
				# if { ! [_f_TestFunc _f_report_3_sys_loop 	"Report MAY . System" 	-TestItem "Report MAY . System"] } { continue }
			}


			# ##############################################################################
			# PASS 處理
			# ##############################################################################
			set ::ErrorCode ""
			set ::s0 ""
			_f_sfis_Save_Test_Result P ""
			_f_termmsg_V2 "Footer Information" "Finish Date and Time : [clock format [clock seconds] -format "%Y/%m/%d %H:%M:%S"]\nTest Status: PASS" * -nodisplaytime
			_f_capture off
			_f_vini_profilewr STATUS TestFunc ""
			_f_vini_profilewr STATUS SpentTime [_f_date_time_diff [_f_vini_profilerd SFIS start_time]]
			upload_log_FTP $::capturefilename "" $::FTPLOG_SEND_GROUP
			_f_sfis_Save_Test_Data
		}
}



set ::dirRaw "C:/testlog/WDO_PARSER_RAW/02_REPORT_MAY/11_RAW_4LOOP"
set ::dirReport "C:/testlog/WDO_PARSER_RAW/02_REPORT_MAY/12_REPORT_4LOOP"

proc _f_report_4_iperf_loop {} {
		set d_time [_f_LTIME]

		set build_date_time [clock format [clock seconds] -format "%y%m%d_%H%M%S"]
		set build_time [lindex [string map {_ " "} $build_date_time] 1]

		set rawDir 		"$::dirRaw"
		set reportDir 	"$::dirReport/report_4_iperf"
		if { ![file exist $reportDir] } { file mkdir $reportDir }

		set workDir "$reportDir/tmp"
		if { [file exist $workDir] } { file delete -force $workDir }
		if { ![file exist $workDir] } { file mkdir $workDir }

		set tmpDir $rawDir

		## example 1: 240331
		set dataDir1 ""
		foreach dataDir1 [glob -nocomplain -types d -directory $tmpDir *] {
				set tmpDir $dataDir1

				set dataDir1 [lindex [string map {/ " "} $dataDir1] end-0]
				puts "dataDir1 : $dataDir1"

				## example 2: LEG_4_HTD_Volt_Umin_240329_143428
				foreach dataDir2 [glob -nocomplain -types d -directory $tmpDir *] {
						set tmpDir $dataDir2

						set dataDir2 [lindex [string map {/ " "} $dataDir2] end-0]
						puts "dataDir2 : $dataDir2"

						## example 3: RAW_LOOP_13_240331_150728
						foreach dataDir3 [glob -nocomplain -types d -directory $tmpDir *] {
								set tmpDir $dataDir3

								set dataDir3 [lindex [string map {/ " "} $dataDir3] end-0]
								puts "dataDir3 : $dataDir3"

								## example 4: log_4_iperf
								## example 5: WDO1-RX-B46AD4398300_PASS-20240331-150957.csv
								foreach fname [_f_GetFilePaths $tmpDir/log_4_iperf -expectedFiles *.csv] {
											# puts "fname : $fname"
											set infile [_f_ReadFile $fname]

											foreach line [regexp -all -inline -- {[^\n]+} $infile] {
													set line1 [split $line ,]
													if { [llength $line1] < 7 } { continue }

													set IPwdo 	[lindex $line1 0]
													set IPrxtx 	[lindex $line1 1]
													set IPdate 	[lindex $line1 2]
													set IPtime 	[lindex $line1 3]
													set IPsec 	[clock scan [lindex $line1 2]_[lindex $line1 3] -format "%Y/%m/%d_%H:%M:%S"]

													set IPmac  	[string map {MAC_ ""} [lindex $line1 4]]
													set IPbps 	[lindex $line1 5]
													set IPresult [lindex $line1 6]

													append dataarray($IPmac) "$IPsec,$IPdate,$IPtime,$IPmac,$IPwdo,$IPresult,$IPrxtx,$IPbps\n"
											}

											foreach name [array names dataarray] {
													_f_WriteFile "${workDir}/report_4_iperf_$name\_tmp.csv" w $dataarray($name)
											}
								}
						}
				}
		}

		#; Stage D:
		#; ========
		#; report_4_iperf_B46AD43982A6_tmp.csv
		#; 1. 將項目說明寫入 Report.csv 檔的第一行.
		#; 2. 從來源 log 取出的值, 寫入 Report.csv.
		#; ==============================================
		set build_date_time [clock format [clock seconds] -format "%y%m%d_%H%M%S"]
		set build_time [lindex [string map {_ " "} $build_date_time] 1]

		set csv_line_1 "Index,Date,Time,MAC,WDO,Result,TXRX,Throughput\n"

		foreach fname [glob -no -directory $workDir -tails *.csv] {
						# puts "fname : $fname"
						set mac [lindex [string map {_ " "} $fname] 3]

						set reportFile "$reportDir/report_4_iperf_$mac\_$build_time.csv"
						_f_WriteFile $reportFile w $csv_line_1

						set inTMP [_f_ReadFile ${workDir}/$fname]
						_f_WriteFile $reportFile a+ $inTMP
		}

		#; Stage F:
		#; ========
		#; 刪除操作暫用的 tmp 資寮夾和檔案.
		#; ============================================
		if { [file exist $workDir] } { file delete -force $workDir }

		puts "Total TIME : [expr {[_f_LTIME] - $d_time}]"
		return 1
}
